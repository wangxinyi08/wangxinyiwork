type student struct {
	name  string
	score int
}

func findmax(a []student, n int) int {
	s := n
	for i := n + 1; i < len(a); i++ {
		if a[s].score < a[i].score {
			s = i
		}
	}
	return s
}

func sort(a []student) {
	for i := 0; i < len(a); i++ {
		s := findmax(a, i)
		a[s], a[i] = a[i], a[s]
	}
}

func findscore(a []student, name string) (score int, ok bool) {
	for x <- a {
		if x.name == name {
			return x.score, true
		}
	}
	return 0, false
}

func passednames(a []student) []string {
	return [x.name for x <- a, x.score >= 60]
}
func findscore2(a []student, name string) (score int, ok bool) {
 return {x.score for x <- a,x.name == name}
}

func hasfailed(a []student)bool{
return {for x<-a,x.score < 60}
}
 
a := [student{"a", 95}, student{"b", 92}, student{"c", 9}]

sort(a)
println(findscore(a, "b"))
println(findscore(a, "d"))
println(passednames(a))
println(findscore2(a, "d"))
println(findscore2(a, "d"))
println(hasfailed(a))

